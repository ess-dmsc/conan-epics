stages:
  - container_build_node

variables:
  CONAN_USER: "ess-dmsc"
  CONAN_PKG_CHANNEL: "stable"
  PROJECT_NAME: "conan-epics"

# Container Build Node Stage so the Conan package can be built for all platforms
container_build_node:
  stage: container_build_node
  tags:
    - dc-zone 
    - docker
  parallel:
    matrix:
      - CONTAINER: "centos7-gcc11"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:12.3.0"
        SHELL: "/usr/bin/scl enable devtoolset-11 rh-python38 -- /bin/bash -e -x"
      - CONTAINER: "almalinux8-gcc12"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-almalinux8-build-node:1.1.0"
        SHELL: "/usr/bin/scl enable gcc-toolset-12 -- /bin/bash -e -x"
      - CONTAINER: "debian11"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-debian11-build-node:5.2.0"
        SHELL: "bash -e -x"
      - CONTAINER: "ubuntu2204"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-ubuntu2204-build-node:5.0.0"
        SHELL: "bash -e -x"
  image: $IMAGE
  script:
    - echo "Starting build job for $PROJECT_NAME on $CONTAINER"
    - |
      $SHELL <<EOF
        mkdir epics
        cd epics
        echo 'Setting up Conan...'
        # TODO: we want to choose to upload centos7-gcc11 only
        # TODO: STABLE IS LIKE THIS -> '--no-overwrite' 
        conan remote add ecdc-conan-external https://artifactory.esss.lu.se/artifactory/api/conan/ecdc-conan-external --force
        conan user --password $ESS_ARTIFACTORY_ECDC_CONAN_TOKEN --remote ecdc-conan-external $ESS_ARTIFACTORY_ECDC_CONAN_USER
        conan install .. --build=missing
        conan search epics/7.0.6@${CONAN_USER}/${CONAN_PKG_CHANNEL} -r=ecdc-conan-external --json=remote_info.json || {
          echo 'Remote package not found. Uploading...'
          conan upload --no-overwrite --remote ecdc-conan-external epics/7.0.6@${CONAN_USER}/${CONAN_PKG_CHANNEL} --all
          exit 0
        }
        remote_options="$(jq -r '.results[0].options' remote_info.json)"
        remote_settings="$(jq -r '.results[0].settings' remote_info.json)"
        if [ "$(jq '.results | length' remote_info.json)" -eq 0 ]; then
          echo 'No packages found for reference epics/7.0.6@${CONAN_USER}/${CONAN_PKG_CHANNEL} in remote ecdc-conan-external.'
          remote_options='null'
          remote_settings='null'
        else
          remote_options="$(jq -r '.results[0].options' remote_info.json)"
          remote_settings="$(jq -r '.results[0].settings' remote_info.json)"
        fi
        echo "Remote options: $remote_options"
        echo "Remote settings: $remote_settings"
        echo "Archiving build artifacts..."
        pwd
        # Create file with build information
        touch BUILD_INFO
        echo "Repository: ${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}" >> BUILD_INFO
        echo "Commit: ${CI_COMMIT_SHA}" >> BUILD_INFO
        echo "GitLab build: ${CI_PIPELINE_ID}" >> BUILD_INFO
      EOF
    - tar czvf epics.tar.gz epics

  artifacts:
    paths:
      - epics.tar.gz
    expire_in: 1 month

# Clean up after the build
after_script:
  - echo "Cleaning workspace"
  - rm -rf epics