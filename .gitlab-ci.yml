stages:
  - container_build_node

variables:
  CONAN_USER: "ess-dmsc"
  CONAN_PKG_CHANNEL: "stable"
  PROJECT_NAME: "conan-epics"

# Container Build Node Stage so the Conan package can be built for all platforms
container_build_node:
  stage: container_build_node
  tags:
    - dc-zone
    - docker
  parallel:
    matrix:
      - CONTAINER: "centos7-gcc11"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:12.3.0"
        SHELL: "/usr/bin/scl enable devtoolset-11 rh-python38 -- /bin/bash -e -x"
      - CONTAINER: "almalinux8-gcc12"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-almalinux8-build-node:1.1.0"
        SHELL: "/usr/bin/scl enable gcc-toolset-12 -- /bin/bash -e -x"
      - CONTAINER: "debian11"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-debian11-build-node:5.2.0"
        SHELL: "bash -e -x"
      - CONTAINER: "ubuntu2204"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-ubuntu2204-build-node:5.0.0"
        SHELL: "bash -e -x"
  image: $IMAGE
  before_script:
    - |
      function setup_conan() {
        echo 'Setting up Conan...'
        conan remote add "$conan_remote_name" "$conan_remote_url" --force
        conan user --password "$ESS_ARTIFACTORY_ECDC_CONAN_TOKEN" --remote ecdc-conan-external "$ESS_ARTIFACTORY_ECDC_CONAN_USER"
      }

      function create_build_info() {
        echo 'Creating build info...'
        touch BUILD_INFO
        echo "Repository: ${CI_PROJECT_PATH}/${CI_COMMIT_REF_NAME}" >> BUILD_INFO
        echo "Commit: ${CI_COMMIT_SHA}" >> BUILD_INFO
        echo "GitLab build: ${CI_PIPELINE_ID}" >> BUILD_INFO
      }
  script:
    - echo "Starting build job for $PROJECT_NAME on $CONTAINER"
    - |
      $SHELL <<EOF
        setup_conan
        cd archiving
        ./generate-conanfile.sh "${CONAN_USER}" "${CONAN_PKG_CHANNEL}" 

        mkdir epics
        cd epics

        echo 'Conan installation...'
        conan install .. --build=missing

        # TODO: Add the build step here
        # echo 'Conan package upload...'
        # conan install .. --build=missing

        echo "Archiving build artifacts..."
        # Remove additional files generated by Conan
        rm conan*
        rm graph_info.json

        create_build_info
      EOF
    - cd archiving
    - tar czvf ../epics.tar.gz epics
  variables:
    conan_remote_name: "ecdc-conan-external"
    conan_remote_url: "https://artifactory.esss.lu.se/artifactory/api/conan/ecdc-conan-external"

  artifacts:
    paths:
      - epics.tar.gz
    expire_in: 1 month

# Clean up after the build
after_script:
  - echo "Cleaning workspace"
  - rm -rf epics
