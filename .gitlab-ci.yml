stages:
  - checkout
  - build
  - archive

variables:
  CONAN_USER: "ess-dmsc"
  CONAN_PKG_CHANNEL: "stable"
  PROJECT_NAME: "conan-epics"
  NUM_ARTIFACTS_TO_KEEP: 1

before_script:
  - echo "Setting up environment..."
  - |
    if [[ "$CI_COMMIT_REF_NAME" == "master" ]]; then
      export NUM_ARTIFACTS_TO_KEEP=3
    else
      export NUM_ARTIFACTS_TO_KEEP=1
    fi

# Cache Conan dependencies
cache:
  paths:
    - .conan

# macOS Build Stage (if enabled)
macos_build:
  stage: build
  tags:
    - dc-zone
  image: apple/Xcode:latest
  script:
    - |
      rm -rf $PROJECT_NAME  # Clean up previous clone if any
      git clone https://gitlab.esss.lu.se/ecdc/ess-dmsc/conan-epics.git
      cd $PROJECT_NAME
      git checkout $CI_COMMIT_REF_NAME

      # macOS: Package
      conan create . ${CONAN_USER}/${CONAN_PKG_CHANNEL} --build=outdated
  only:
    - master
  artifacts:
    paths:
      - build/
    expire_in: 1 day

# Archiving Build Node
archiving:
  stage: archive
  tags:
    - dc-zone
  image: python:3.8-slim
  script: |
    echo "Installing dependencies..."

    # Install pip
    curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
    python get-pip.py

    # Install Conan
    pip install conan
    # Install Conan
    pip install conan
    pwd
    cd archiving
    ./generate-conanfile.sh ${CONAN_USER} ${CONAN_PKG_CHANNEL} 
    mkdir epics
    cd epics
    conan install ..
    touch BUILD_INFO
    echo "Repository: $CI_PROJECT_NAME/$CI_COMMIT_REF_NAME" >> BUILD_INFO
    echo "Commit: $CI_COMMIT_SHA" >> BUILD_INFO
    echo "GitLab build: $CI_JOB_ID" >> BUILD_INFO
    tar czvf epics.tar.gz epics

  artifacts:
    paths:
      - epics.tar.gz
    expire_in: 1 day

# Clean up after the build
after_script:
  - echo "Cleaning workspace"
  - rm -rf $CI_PROJECT_DIR
