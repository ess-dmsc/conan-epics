stages:
  - container_build_node
  - archive

variables:
  CONAN_USER: "ess-dmsc"
  CONAN_PKG_CHANNEL: "stable"
  PROJECT_NAME: "conan-epics"
  NUM_ARTIFACTS_TO_KEEP: 1

# Calculate number of artifacts to keep
before_script:
  - echo "Setting up environment..."
  - |
    if [[ "$CI_COMMIT_REF_NAME" == "master" ]]; then
      export NUM_ARTIFACTS_TO_KEEP=3
    else
      export NUM_ARTIFACTS_TO_KEEP=1
    fi

# Setup Conan
default:
  before_script:
    - mkdir epics
    - cd epics
    - conan remote add ecdc-conan-external https://artifactory.esss.lu.se/artifactory/api/conan/ecdc-conan-external --force
    - conan user --password $ESS_ARTIFACTORY_ECDC_CONAN_TOKEN --remote ecdc-conan-external $ESS_ARTIFACTORY_ECDC_CONAN_USER

# Container Build Node Stage so the Conan package can be built for all platforms
container_build_node:
  stage: container_build_node
  parallel:
    matrix:
      - CONTAINER: "centos7-gcc11"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-centos7-build-node:12.3.0"
        SHELL: "/usr/bin/scl enable devtoolset-11 rh-python38 -- /bin/bash -e -x"
      - CONTAINER: "almalinux8-gcc12"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-almalinux8-build-node:1.1.0"
        SHELL: "/usr/bin/scl enable gcc-toolset-12 -- /bin/bash -e -x"
      - CONTAINER: "debian11"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-debian11-build-node:5.2.0"
        SHELL: "bash -e -x"
      - CONTAINER: "ubuntu2204"
        IMAGE: "registry.esss.lu.se/ecdc/ess-dmsc/docker-ubuntu2204-build-node:5.0.0"
        SHELL: "bash -e -x"
  
  script:
    - echo "Running on $CONTAINER"
    - |
      $SHELL -c "
      conan install .. --build=missing &&
      echo 'Archiving...' &&
      echo 'conan remote list' &&
      conan remote list &&
      local_options=\$(conan inspect --raw options epics/7.0.6@${CONAN_USER}/${CONAN_PKG_CHANNEL}) &&
      local_settings=\$(conan inspect --raw settings epics/7.0.6@${CONAN_USER}/${CONAN_PKG_CHANNEL}) &&
      echo 'local_options: \$local_options' &&
      echo 'local_settings: \$local_settings' &&
      conan search epics/7.0.6@${CONAN_USER}/${CONAN_PKG_CHANNEL} -r=ecdc-conan-external --json=remote_info.json || {
        echo 'Remote package not found. Uploading...' &&
        conan upload --no-overwrite --remote ecdc-conan-external epics/7.0.6@${CONAN_USER}/${CONAN_PKG_CHANNEL} --all &&
        exit 0
      } &&
      remote_options=\$(jq -r '.results[0].options' remote_info.json) &&
      remote_settings=\$(jq -r '.results[0].settings' remote_info.json) &&
      if [[ \$(jq '.results | length' remote_info.json) -eq 0 ]]; then
        echo 'No packages found for reference epics/7.0.6@${CONAN_USER}/${CONAN_PKG_CHANNEL} in remote ecdc-conan-external.' &&
        remote_options='null' &&
        remote_settings='null'
      else
        remote_options=\$(jq -r '.results[0].options' remote_info.json) &&
        remote_settings=\$(jq -r '.results[0].settings' remote_info.json)
      fi &&
      echo 'Remote options: \$remote_options' &&
      echo 'Remote settings: \$remote_settings'
      "

archiving:
  stage: archive
  script:
    - echo "Archiving build artifacts..."
    - tar czvf epics.tar.gz epics
  artifacts:
    paths:
      - epics.tar.gz
    expire_in: 1 month

# Clean up after the build
after_script:
  - echo "Cleaning workspace"
  - rm -rf epics